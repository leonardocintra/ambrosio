
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.6.0
 * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
 */
Prisma.prismaVersion = {
  client: "6.6.0",
  engine: "f676762280b54cd07c770017ed3711ddde35f37a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.PaisScalarFieldEnum = {
  id: 'id',
  isoAlpha2: 'isoAlpha2',
  nome: 'nome',
  regiao: 'regiao',
  subRegiao: 'subRegiao',
  regiaoIntermediaria: 'regiaoIntermediaria',
  lingua: 'lingua',
  capital: 'capital'
};

exports.Prisma.EstadoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  sigla: 'sigla',
  ativo: 'ativo',
  paisId: 'paisId'
};

exports.Prisma.CidadeScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  estadoId: 'estadoId',
  ativo: 'ativo'
};

exports.Prisma.EnderecoScalarFieldEnum = {
  id: 'id',
  cep: 'cep',
  logradouro: 'logradouro',
  cidade: 'cidade',
  bairro: 'bairro',
  numero: 'numero',
  UF: 'UF',
  pais: 'pais',
  observacao: 'observacao'
};

exports.Prisma.TipoCarismaScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao'
};

exports.Prisma.EstadoCivilScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao'
};

exports.Prisma.EscolaridadeScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao'
};

exports.Prisma.PessoaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  conhecidoPor: 'conhecidoPor',
  sexo: 'sexo',
  cpf: 'cpf',
  nacionalidade: 'nacionalidade',
  dataNascimento: 'dataNascimento',
  estadoCivilId: 'estadoCivilId',
  foto: 'foto',
  escolaridadeId: 'escolaridadeId',
  ativo: 'ativo',
  tipoPessoaId: 'tipoPessoaId'
};

exports.Prisma.TipoPessoaScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao'
};

exports.Prisma.PessoaEnderecoScalarFieldEnum = {
  pessoaId: 'pessoaId',
  enderecoId: 'enderecoId'
};

exports.Prisma.PessoaCasalScalarFieldEnum = {
  id: 'id',
  pessoaMaridoId: 'pessoaMaridoId',
  pessoaMulherId: 'pessoaMulherId'
};

exports.Prisma.PessoaCarismaScalarFieldEnum = {
  pessoaId: 'pessoaId',
  tipoCarismaId: 'tipoCarismaId'
};

exports.Prisma.PassaportePessoaScalarFieldEnum = {
  id: 'id',
  pessoaId: 'pessoaId',
  numero: 'numero',
  dataExpiracao: 'dataExpiracao',
  renovado: 'renovado',
  dataRenovacao: 'dataRenovacao'
};

exports.Prisma.PessoaContatoScalarFieldEnum = {
  id: 'id',
  telefoneResidencial: 'telefoneResidencial',
  telefoneCelular: 'telefoneCelular',
  observacao: 'observacao',
  ativo: 'ativo',
  email: 'email',
  pessoaId: 'pessoaId'
};

exports.Prisma.TipoDioceseScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao'
};

exports.Prisma.DioceseScalarFieldEnum = {
  id: 'id',
  tipoDioceseId: 'tipoDioceseId',
  descricao: 'descricao',
  enderecoId: 'enderecoId'
};

exports.Prisma.ParoquiaScalarFieldEnum = {
  id: 'id',
  enderecoId: 'enderecoId',
  dioceseId: 'dioceseId',
  descricao: 'descricao'
};

exports.Prisma.ParoquiaPessoasScalarFieldEnum = {
  pessoaId: 'pessoaId',
  paroquiaId: 'paroquiaId'
};

exports.Prisma.EtapaScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao'
};

exports.Prisma.RegiaoScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao',
  macroRegiao: 'macroRegiao'
};

exports.Prisma.TipoEquipeScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao'
};

exports.Prisma.EquipeScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao'
};

exports.Prisma.EquipeTipoEquipeScalarFieldEnum = {
  equipeId: 'equipeId',
  tipoEquipeId: 'tipoEquipeId'
};

exports.Prisma.EquipeRegiaoScalarFieldEnum = {
  equipeId: 'equipeId',
  regiaoId: 'regiaoId'
};

exports.Prisma.EquipePessoasScalarFieldEnum = {
  equipeId: 'equipeId',
  pessoaId: 'pessoaId'
};

exports.Prisma.LocalidadeScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao',
  dioceseId: 'dioceseId',
  tipoLocalidadeId: 'tipoLocalidadeId',
  observacao: 'observacao',
  enderecoId: 'enderecoId'
};

exports.Prisma.LocalidadeRegiaoScalarFieldEnum = {
  localidadeId: 'localidadeId',
  regiaoId: 'regiaoId'
};

exports.Prisma.TipoLocalidadeScalarFieldEnum = {
  id: 'id',
  descricao: 'descricao'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  role: 'role',
  whatsapp: 'whatsapp',
  verifiedWhatsapp: 'verifiedWhatsapp',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Sexo = exports.$Enums.Sexo = {
  MASCULINO: 'MASCULINO',
  FEMININO: 'FEMININO'
};

exports.roles = exports.$Enums.roles = {
  ADMIN: 'ADMIN',
  CATEQUISTA_NACIONAL: 'CATEQUISTA_NACIONAL',
  CATEQUISTA_GRANDE_REGIAO: 'CATEQUISTA_GRANDE_REGIAO',
  CATEQUISTA_REGIAO: 'CATEQUISTA_REGIAO',
  CATEQUISTA_SETOR: 'CATEQUISTA_SETOR',
  CATEQUISTA_PAROQUIA: 'CATEQUISTA_PAROQUIA',
  SECRETARIA_CNC: 'SECRETARIA_CNC',
  SECRETARIA_PAROQUIA: 'SECRETARIA_PAROQUIA',
  NAO_IDENTIFICADO: 'NAO_IDENTIFICADO'
};

exports.Prisma.ModelName = {
  pais: 'pais',
  estado: 'estado',
  cidade: 'cidade',
  endereco: 'endereco',
  tipoCarisma: 'tipoCarisma',
  estadoCivil: 'estadoCivil',
  escolaridade: 'escolaridade',
  pessoa: 'pessoa',
  tipoPessoa: 'tipoPessoa',
  pessoaEndereco: 'pessoaEndereco',
  pessoaCasal: 'pessoaCasal',
  pessoaCarisma: 'pessoaCarisma',
  passaportePessoa: 'passaportePessoa',
  pessoaContato: 'pessoaContato',
  tipoDiocese: 'tipoDiocese',
  diocese: 'diocese',
  paroquia: 'paroquia',
  paroquiaPessoas: 'paroquiaPessoas',
  etapa: 'etapa',
  regiao: 'regiao',
  tipoEquipe: 'tipoEquipe',
  equipe: 'equipe',
  equipeTipoEquipe: 'equipeTipoEquipe',
  equipeRegiao: 'equipeRegiao',
  equipePessoas: 'equipePessoas',
  localidade: 'localidade',
  localidadeRegiao: 'localidadeRegiao',
  tipoLocalidade: 'tipoLocalidade',
  user: 'user'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
