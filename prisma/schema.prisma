// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model endereco {
  id         Int        @id @default(autoincrement())
  cep        String     @db.VarChar(8)
  logradouro String     @db.VarChar(50)
  cidade     String     @db.VarChar(50)
  bairro     String     @db.VarChar(50)
  numero     String     @db.VarChar(5)
  UF         String     @db.VarChar(2)
  pais       String     @default("Brasil") @db.VarChar(20)
  dioceses   diocese[]
  paroquias  paroquia[]
}

model tipoCarisma {
  id        Int      @id @default(autoincrement())
  descricao String   @db.VarChar(50)
  pessoas   pessoa[]
}

model estadoCivil {
  id        Int      @id @default(autoincrement())
  descricao String   @unique @db.VarChar(50)
  pessoas   pessoa[]
}

model escolaridade {
  id        Int      @id @default(autoincrement())
  descricao String   @unique @db.VarChar(50)
  pessoas   pessoa[]
}

model pessoa {
  id                   Int                @id @default(autoincrement())
  nome                 String             @db.VarChar(50)
  nacionalidade        String             @db.VarChar(50)
  estadoCivilId        Int
  estadoCivil          estadoCivil        @relation(fields: [estadoCivilId], references: [id])
  foto                 String?
  escolaridadeId       Int?
  escolaridade         escolaridade?      @relation(fields: [escolaridadeId], references: [id])
  tipoCarismaId        Int
  tipoCarisma          tipoCarisma        @relation(fields: [tipoCarismaId], references: [id])
  ativo                Boolean            @default(true)
  passaportes          passaportePessoa[]
  contatos             pessoaContato[]
  paroquias            paroquiaPessoas[]
  casamentosComoMarido pessoaCasal[]      @relation("Marido")
  casamentosComoMulher pessoaCasal[]      @relation("Mulher")
}

model pessoaCasal {
  pessoaMaridoId Int
  pessoaMulherId Int
  marido         pessoa @relation("Marido", fields: [pessoaMaridoId], references: [id])
  mulher         pessoa @relation("Mulher", fields: [pessoaMulherId], references: [id])

  @@unique([pessoaMaridoId, pessoaMulherId])
}

model passaportePessoa {
  id            Int       @id @default(autoincrement())
  pessoaId      Int
  numero        String
  dataExpiracao DateTime
  renovado      Boolean   @default(false)
  dataRenovacao DateTime?
  pessoa        pessoa    @relation(fields: [pessoaId], references: [id])
}

model pessoaContato {
  id                  Int     @id @default(autoincrement())
  telefoneResidencial String?
  telefoneCelular     String?
  observacao          String?
  ativo               Boolean @default(true)
  email               String?
  pessoaId            Int
  pessoa              pessoa  @relation(fields: [pessoaId], references: [id])
}

model tipoDiocese {
  id        Int       @id @default(autoincrement())
  descricao String    @db.VarChar(50)
  dioceses  diocese[]
}

model diocese {
  id            Int         @id @default(autoincrement())
  tipoDioceseId Int
  tipoDiocese   tipoDiocese @relation(fields: [tipoDioceseId], references: [id])
  descricao     String      @db.VarChar(50)
  enderecoId    Int
  endereco      endereco    @relation(fields: [enderecoId], references: [id])
  paroquias     paroquia[]
}

model paroquia {
  id         Int               @id @default(autoincrement())
  enderecoId Int
  dioceseId  Int
  endereco   endereco          @relation(fields: [enderecoId], references: [id])
  diocese    diocese           @relation(fields: [dioceseId], references: [id])
  descricao  String            @db.VarChar(50)
  pessoas    paroquiaPessoas[]
}

model paroquiaPessoas {
  pessoaId   Int
  paroquiaId Int
  pessoa     pessoa   @relation(fields: [pessoaId], references: [id])
  paroquia   paroquia @relation(fields: [paroquiaId], references: [id])

  @@id([pessoaId, paroquiaId])
}
